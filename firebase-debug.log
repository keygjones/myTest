[debug] [2020-11-09T08:27:47.348Z] ----------------------------------------------------------------------
[debug] [2020-11-09T08:27:47.350Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\hoko\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2020-11-09T08:27:47.350Z] CLI Version:   8.15.1
[debug] [2020-11-09T08:27:47.350Z] Platform:      win32
[debug] [2020-11-09T08:27:47.350Z] Node Version:  v12.14.1
[debug] [2020-11-09T08:27:47.351Z] Time:          Mon Nov 09 2020 09:27:47 GMT+0100 (GMT+01:00)
[debug] [2020-11-09T08:27:47.351Z] ----------------------------------------------------------------------
[debug] [2020-11-09T08:27:47.352Z] 
[debug] [2020-11-09T08:27:47.357Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-11-09T08:27:47.357Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\hoko\IdeaProjects\firebaseTest

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-11-09T08:27:53.645Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-11-09T08:27:54.045Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:27:54 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  Using project myprofile-45acc (myProfile) 
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2020-11-09T08:28:02.691Z] >>> HTTP REQUEST GET https://myprofile-45acc.firebaseio.com/.settings/rules.json  
 
[debug] [2020-11-09T08:28:03.279Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Mon, 09 Nov 2020 08:28:03 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] +  Database Rules for myprofile-45acc have been downloaded to database.rules.json. 
[info] Future modifications to database.rules.json will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2020-11-09T08:28:03.284Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/myprofile-45acc/services/firestore.googleapis.com  
 
[debug] [2020-11-09T08:28:04.346Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:04 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:28:04.346Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/myprofile-45acc  
 
[debug] [2020-11-09T08:28:04.753Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:04 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:28:04.753Z] database_type: CLOUD_FIRESTORE
[debug] [2020-11-09T08:28:04.754Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-11-09T08:28:04.754Z] > authorizing via signed-in user
[debug] [2020-11-09T08:28:04.754Z] [iam] checking project myprofile-45acc for permissions ["firebase.projects.get"]
[debug] [2020-11-09T08:28:04.755Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/myprofile-45acc:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-11-09T08:28:05.607Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:05 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=608","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-11-09T08:28:07.877Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/myprofile-45acc/releases?pageSize=10&pageToken=  
 
[debug] [2020-11-09T08:28:08.771Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:08 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:28:08.772Z] Found ruleset: projects/myprofile-45acc/rulesets/7c48e0eb-2ce0-4c8c-a87e-23bbaaff38b4
[debug] [2020-11-09T08:28:08.772Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/myprofile-45acc/rulesets/7c48e0eb-2ce0-4c8c-a87e-23bbaaff38b4  
 
[debug] [2020-11-09T08:28:09.587Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:09 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-11-09T08:28:11.812Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/myprofile-45acc/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2020-11-09T08:28:11.812Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/myprofile-45acc/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2020-11-09T08:28:12.232Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:12 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:28:12.607Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:12 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2020-11-09T08:28:12.616Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-11-09T08:28:12.616Z] > authorizing via signed-in user
[debug] [2020-11-09T08:28:12.616Z] [iam] checking project myprofile-45acc for permissions ["firebase.projects.get"]
[debug] [2020-11-09T08:28:12.616Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/myprofile-45acc:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-11-09T08:28:13.413Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=605","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:28:13.414Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/myprofile-45acc/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2020-11-09T08:28:13.414Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/myprofile-45acc/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2020-11-09T08:28:14.362Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:14 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:28:14.429Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:28:14 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  Wrote functions/package.json 
[info] +  Wrote functions/.eslintrc.js 
[info] +  Wrote functions/tsconfig.json 
[info] +  Wrote functions/src/index.ts 
[info] +  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2020-11-09T08:29:50.818Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2020-11-09T08:29:51.108Z] <<< HTTP RESPONSE 200 {"accept-ranges":"bytes","vary":"Accept-Encoding, Origin","content-type":"application/json","content-length":"1411","date":"Mon, 09 Nov 2020 08:16:29 GMT","expires":"Mon, 09 Nov 2020 09:06:29 GMT","last-modified":"Thu, 05 Nov 2020 20:31:07 GMT","x-content-type-options":"nosniff","server":"sffe","x-xss-protection":"0","cache-control":"public, max-age=3000","age":"802","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""}
[info] +  Wrote public/index.html 
[info] 
[info] i  Detected a .git folder at C:\Users\hoko\IdeaProjects\firebaseTest 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=622328672&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2020-11-09T08:30:03.336Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"171002582603228685d2","redirect_uri":"http://localhost:9005","state":"622328672"}
[debug] [2020-11-09T08:30:03.802Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:30:03 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","status":"200 OK","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With","etag":"W/\"fa2660cedfd4d6ab99c534bc32095a4b\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker.js gist.github.com/socket-worker.js","x-github-request-id":"CBA9:7A77:4A81EFB:72EFCD6:5FA8FE0B"}
[debug] [2020-11-09T08:30:03.803Z] >>> HTTP REQUEST GET https://api.github.com/user  
 
[debug] [2020-11-09T08:30:04.273Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:30:04 GMT","content-type":"application/json; charset=utf-8","content-length":"1430","status":"200 OK","cache-control":"private, max-age=60, s-maxage=60","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With","etag":"\"c8e215dbdb6266d5b92dd6574f7edd8bb9d3692343c891affbc1dafab22ebfc8\"","last-modified":"Mon, 09 Nov 2020 08:30:02 GMT","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4999","x-ratelimit-reset":"1604914204","x-ratelimit-used":"1","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","x-github-request-id":"CBAC:1D8F:30A6AE:9AA1C8:5FA8FE0C"}
[info] 
[info] +  Success! Logged into GitHub as keygjones 
[info] 
[debug] [2020-11-09T08:30:22.737Z] >>> HTTP REQUEST GET https://api.github.com/repos/myTest/actions/secrets/public-key?type=owner  
 
[debug] [2020-11-09T08:30:23.158Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:30:23 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4998","x-ratelimit-reset":"1604914204","x-ratelimit-used":"2","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CBB0:7977:5A617F:1061BB3:5FA8FE1E"}
[debug] [2020-11-09T08:30:23.158Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2020-11-09T08:31:24.736Z] >>> HTTP REQUEST GET https://api.github.com/repos/myTest/actions/secrets/public-key?type=owner  
 
[debug] [2020-11-09T08:31:25.236Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:31:25 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4997","x-ratelimit-reset":"1604914204","x-ratelimit-used":"3","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CBD9:3BD0:931D417:EABAC13:5FA8FE5C"}
[debug] [2020-11-09T08:31:25.236Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2020-11-09T08:31:55.425Z] >>> HTTP REQUEST GET https://api.github.com/repos/https://github.com/keygjones/myTest.git/actions/secrets/public-key?type=owner  
 
[debug] [2020-11-09T08:31:55.911Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:31:55 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4996","x-ratelimit-reset":"1604914204","x-ratelimit-used":"4","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CBE1:7784:3610E27:79050CC:5FA8FE7B"}
[debug] [2020-11-09T08:31:55.911Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2020-11-09T08:33:48.674Z] >>> HTTP REQUEST GET https://api.github.com/repos/keygjones/actions/secrets/public-key?type=owner  
 
[debug] [2020-11-09T08:33:48.675Z] >>> HTTP REQUEST GET https://api.github.com/repos///actions/secrets/public-key?type=owner  
 
[debug] [2020-11-09T08:33:49.106Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:33:49 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4995","x-ratelimit-reset":"1604914204","x-ratelimit-used":"5","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CC27:363D:674F86F:AA24256:5FA8FEEC"}
[debug] [2020-11-09T08:33:49.106Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2020-11-09T08:33:49.134Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:33:49 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4994","x-ratelimit-reset":"1604914204","x-ratelimit-used":"6","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CC26:121F:34E5E96:7581DF2:5FA8FEEC"}
[debug] [2020-11-09T08:33:49.134Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2020-11-09T08:33:50.176Z] >>> HTTP REQUEST GET https://api.github.com/repos/myTest/actions/secrets/public-key?type=owner  
 
[debug] [2020-11-09T08:33:50.597Z] <<< HTTP RESPONSE 404 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:33:50 GMT","content-type":"application/json; charset=utf-8","content-length":"74","status":"404 Not Found","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4993","x-ratelimit-reset":"1604914204","x-ratelimit-used":"7","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","vary":"Accept-Encoding, Accept, X-Requested-With","x-github-request-id":"CC29:4E66:E14D79:262545E:5FA8FEEE"}
[debug] [2020-11-09T08:33:50.597Z] <<< HTTP RESPONSE BODY Not Found {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2020-11-09T08:33:59.336Z] >>> HTTP REQUEST GET https://api.github.com/repos/keygjones/myTest/actions/secrets/public-key?type=owner  
 
[debug] [2020-11-09T08:33:59.779Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:33:59 GMT","content-type":"application/json; charset=utf-8","content-length":"84","status":"200 OK","cache-control":"private, max-age=60, s-maxage=60","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With","etag":"\"3beb413b8073e7291c1e799edf25c68148439aeca670492008bc073e0de2a854\"","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4992","x-ratelimit-reset":"1604914204","x-ratelimit-used":"8","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","x-github-request-id":"CC2C:0B5F:159D41:42F7F6:5FA8FEF7"}
[debug] [2020-11-09T08:33:59.782Z] >>> HTTP REQUEST GET https://api.github.com/repos/keygjones/myTest  
 
[debug] [2020-11-09T08:34:00.239Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:34:00 GMT","content-type":"application/json; charset=utf-8","content-length":"5006","status":"200 OK","cache-control":"private, max-age=60, s-maxage=60","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With","etag":"\"d86b2010c779d6844e3742caa8afc2338d2d462de4c6948979b9bb1413291a85\"","last-modified":"Mon, 09 Nov 2020 08:31:18 GMT","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"repo","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4991","x-ratelimit-reset":"1604914204","x-ratelimit-used":"9","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","x-github-request-id":"CC2D:7784:3613D24:790AE7B:5FA8FEF7"}
[debug] [2020-11-09T08:34:00.240Z] >>> HTTP REQUEST POST https://iam.googleapis.com/v1/projects/myprofile-45acc/serviceAccounts  
 {"accountId":"github-action-311271900","serviceAccount":{"displayName":"GitHub Actions (keygjones/myTest)","description":"A service account with permission to deploy to Firebase Hosting for the GitHub repository keygjones/myTest"}}
[debug] [2020-11-09T08:34:01.110Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:34:01 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:34:01.111Z] >>> HTTP REQUEST GET https://iam.googleapis.com/v1/projects/myprofile-45acc/serviceAccounts/github-action-311271900@myprofile-45acc.iam.gserviceaccount.com  
 
[debug] [2020-11-09T08:34:01.111Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/myprofile-45acc:getIamPolicy  
 
[debug] [2020-11-09T08:34:02.005Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:34:01 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:34:02.134Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:34:02 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=764","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:34:02.135Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/myprofile-45acc:setIamPolicy  
 {"policy":{"version":1,"etag":"BwWzqFQgz1A=","bindings":[{"role":"roles/editor","members":["serviceAccount:myprofile-45acc@appspot.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-blbht@myprofile-45acc.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-681731077588@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-blbht@myprofile-45acc.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:karl.gunnar.jonsson@gmail.com"]},{"role":"roles/firebasehosting.admin","members":["serviceAccount:github-action-311271900@myprofile-45acc.iam.gserviceaccount.com"]},{"role":"roles/serviceusage.apiKeysViewer","members":["serviceAccount:github-action-311271900@myprofile-45acc.iam.gserviceaccount.com"]},{"role":"roles/run.viewer","members":["serviceAccount:github-action-311271900@myprofile-45acc.iam.gserviceaccount.com"]}]},"updateMask":"bindings"}
[debug] [2020-11-09T08:34:03.382Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:34:03 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1065","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T08:34:03.382Z] >>> HTTP REQUEST POST https://iam.googleapis.com/v1/projects/myprofile-45acc/serviceAccounts/github-action-311271900@myprofile-45acc.iam.gserviceaccount.com/keys  
 {"keyAlgorithm":"KEY_ALG_UNSPECIFIED","privateKeyType":"TYPE_GOOGLE_CREDENTIALS_FILE"}
[debug] [2020-11-09T08:34:04.304Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 08:34:04 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] +  Created service account github-action-311271900 with Firebase Hosting admin permissions. 
[debug] [2020-11-09T08:34:04.335Z] >>> HTTP REQUEST PUT https://api.github.com/repos/keygjones/myTest/actions/secrets/FIREBASE_SERVICE_ACCOUNT_MYPROFILE_45ACC  
 {"encrypted_value":"67ioC/29dLIBqQqiMBszkdJxJXx4DUFs3vp+863Mak56O9y6HWjEVLYmRmatFH/6IWGr28uruDj9BjNyxrYgnjVcxveRm7n8u/+0LwF9yPSeNXwh6rAtKa0j0pGhlrfQmn3QO4NG2chTO5ieDS3lpDcvdlVlJPXHouD5PEYQ2vRNPqrnCBouaKONM8fRlVjSUz8WWER42XuVUZ4y62leEpFw4LvDYVBT3wFGMWVSobQ3XSLuTeWozsHAcKvzFMBdhoKp1ztZe2lsK/GdAhv4UjWePWiAj/aFPWzOeS++YbzwrAvwOVrtOBuEe/SypgvZr/w+uC12iG/+M/avC4c6BluovdW/Ang7pYANU47Qq1SE7vOdguCnsMj2Ll+anMyvX2WtShL0wVmzYNxiluAXuL4Q77uRq1LDAL3cPvGUVdEmCWbLJe9w9R6dz+67QHFVlFTMK+1k/nRTKeMUuq36k3H7dB3bl9pYdacl0dgCOoi16uTiMWm7ORYRm/KAtaw+7TPO8igFI7Wqm3x8mGjewxtfygM6lmmJuE8yak+GOA0kiF/Cg/TN04Iw+hGpuBmLUepT6k+wtvd1QpXNMCEA9/rmzrFI7n2RwJdrZaR/lBW04+OQkK3mkxCyprGTL+MPyDGrVRoYJHY7GqJ4kk1XbKwsVXhxaJXvn+Zbqg1DXg2vvPnDIs80uUyyhpsTO1j/jz4fhJW+Zo0MWXoXglmeM4qqNweyxC6B5uH5uSsSFF08Bj8EiepaqojsGw8hdzI1qhJV9+nVqIvcrxk/Jc6/g3LAWzqFCoJJ98Rk10pWeelrNcLIQ+GPGi3cDev4khTQXT2ca3EIZA/Xl8qEFGt2SzrLqaPHsJZyhuUIjRK9IWLE6P8tOc00/ZpPojSIau45TT7+8ViJBDHOt8RfLXmohmaPkaDZ+nsqxgmbmXCtgGF2WoeUQrrIDj36n78uINrNRvjyxFTLIPuo2HscpoLC9FScrhkRTwIgu5916weNpHtWkNw0TfP681jGzVj/AQz2qA/Kc8eNwH6brF+df7sNfABnzpOSspOGw/fx9u7rccW5N3+kXq/xB2x8MM0fOCUQH5DFKTt5nMaXbJ28Nx+exNSCXSV5FTJ/1ALdBppLsvKdpIfJ4Bt++3tmoWdijnzeoV9C/9rEpm4WhjSPgZDc0Oqh589sQTDFuu6oM4+xnQ6JV5PYrG5wHyQrM5hUTGpgcoHPQN/I59laOiVo5xHxjh5UAQvN4jiY3bb+S8g7H+gij3GFnLmF9fMjBjnTovJ9OkEmofPc+x3aLp7dVapIcCBmMWUAkWwKmVGULyBcqo5Mdk9E2zgRoNDsI+HcmFAuzb0smpEPYZsLlrgpvMyVlJx1vh7mO8xNzKAm7g84uwOS9Wv4qNqlV8P8MvGx+S6aSPDRLKsQg9guVMbBdONDxHS2A97M+nEfEG0CoH9/5UpHoTOVcIL/QX1mE7N3Pfh+EoS+c4MSW/euFgud3vHMGGc7PbUpEjH0FOG22vbPzjNWjj6Bp0ZCXNPxrpuseN+y/j+4lwhwEgqcCnKa8QvmZUdD56BJoopLBphqqKLlOoX+GEJkJs+W0zrqjkpfjMZaN0qXt3xAom+bfGxdhkEQlu9ph9yBhd/ZFftczPdrIoW73q4rsiKewHZqsq6+9LIgYnJYgj9j/kVCFIqeyJzy9VcLb2dT333ix0mE6iIci+yu+Bmfck0kL/WmTwZF5LKuOr0RqUH3qrxVY0y0PcRrMkVmhW8VUXwGXahyhcEIA1ws7IIq/4Obkm7/MpAemJdgEf/kETpHslm4G8ZCo1s5iFJxuOpG0C2fYm0Oxy+TjvccSdItPhP+6eVZRyuZLJa4XyEdf4tqBPwx+JU5nhC4Do+b73DecvIgMsnkNQYdwHki3keopcTKQhynTz1VaFgS38kt5TwZVruLg2MzFFQ/osAkjPlrZQnn4q0xqu5fA+/2aeg38EOTPEAPD3zTfXxkwtaYSjvbbMQvgEg4z2lIuhPKZ3/7XX1HGp6VGrnrLW94cRfRBvLLSu4k54oEcvI1agPJak31Ou7NcT+6B7X08uVZxPPZIbh8hPjp+QQjMMlAlOQuHQPbfPiVtPVdv7yjlah7+yL5cnuT4ZblwnZEjKLKrqpppSmc5XJcaUndey2cURip6fUmz36bqIve+O9cDb6waDVfelK58v74K6hbjJhmxxJqTZAeX4uAPFB1fP11n+Mz13iC9qJlVEmDZvCV1ZvmncI7PFJVpbnH+P33ugOj35yxCAsfdOgYS7BrGf/elKTWW9AdhIknF7kGRCxx1T064gdN4NZMpzNGeISoNVwgzWw7+ioKv1TdEgo807l7U+XasNUTgtEl38guzGW3IwhDemW0FNcucoeJHs8U2a68mduX/QlzX8itjFG5JBs5hQAai2IcgtLYE7yu5jyQNnKgUdShKJzJqLO6wGNVGIAQPqqM7SiiTtR+AZTIOqBSOT7dJmqIjhr/NbC3xevb7r0Kop4Tr28fXLrBPITviOVYrP9pFJyMrVbjHuyeEGObKbL8RMk8Qekc/JYu3V9CTSgL4VgufMXXOAwflt97CmvgmWnTmnaMLrWA8t4qyvv1FxFyHzqK2rfEwmDql4lvf8hpRy6WllW25dFMsc8W5zOwfyhuW8Sa2nETEGtjJk4wZO5HVc/jgoVhdvVi/NE0clq1MsTZK3OAVXNB8p5D/iH/5E+cdKb/933TJTOl2Fv51/V1FYi4m8zjzovs6IwcbAzEROQDyM8TTWeElNBx3JmvTcGqsdCs486taHmguzlmXph7mJUhN43tFA2UQcwqOON9WNRLSXqRtpmzRl00pUidK6WUzVFoY03egcbKyruvYFpq90mudLbfgOHI/kEkHVpANbP0Cqkr1wHypXVz7t/UT+W+jvAj+YH/bjpJU0VTSW/usApZnizWJtHjVFJtn076rB/FwuDeafH5RbFGCDcIS8oDVSsFOivcY51giJH6KN0SAYsdyVYABuZhcdXJ2WnF2TH+98qKpIFbe72aWDX6SyiPNHCBmxI0CP4smnmsmqe3unoRdUs4pzgo1Y/InU1bA3lvT32tBDvZkbJXZEke8lx9OUodtPwyk0tG35Ty6NQEGuEYwZzArJT9U15dNkbBfauyUW0gBqDnP4j9+M5SqWU9v16JI2RoMQB4KQUNXkznf3VGgbDD","key_id":"568250167242549743"}
[debug] [2020-11-09T08:34:04.908Z] <<< HTTP RESPONSE 201 {"server":"GitHub.com","date":"Mon, 09 Nov 2020 08:34:04 GMT","content-type":"application/json; charset=utf-8","content-length":"2","status":"201 Created","cache-control":"private, max-age=60, s-maxage=60","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With","etag":"\"a881df2be4e12a87ea545b03ea80cfa5c0a494c297a5de480203765df5aceff2\"","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4990","x-ratelimit-reset":"1604914204","x-ratelimit-used":"10","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","x-github-request-id":"CC34:777F:2B4164:86FB0E:5FA8FEFC"}
[info] +  Uploaded service account JSON to GitHub as secret FIREBASE_SERVICE_ACCOUNT_MYPROFILE_45ACC. 
[info] i  You can manage your secrets at https://github.com/keygjones/myTest/settings/secrets. 
[info] 
[info] 
[info] +  Created workflow file C:\Users\hoko\IdeaProjects\firebaseTest\.github/workflows/firebase-hosting-pull-request.yml 
[info] 
[info] i  Action required: Visit this URL to revoke authorization for the Firebase CLI GitHub OAuth App: 
[info] https://github.com/settings/connections/applications/89cf50f02ac6aaed3484
[info] i  Action required: Push any new workflow file(s) to your repo 
[info] 
=== Storage Setup
[info] 
[info] Firebase Storage Security Rules allow you to define how and when to allow
[info] uploads and downloads. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
=== Emulators Setup
[info] i  firestore: downloading cloud-firestore-emulator-v1.11.9.jar... {"metadata":{"emulator":{"name":"firestore"},"message":"downloading cloud-firestore-emulator-v1.11.9.jar..."}}
[info] i  database: downloading firebase-database-emulator-v4.7.1.jar... {"metadata":{"emulator":{"name":"database"},"message":"downloading firebase-database-emulator-v4.7.1.jar..."}}
[info] i  pubsub: downloading pubsub-emulator-0.1.0.zip... {"metadata":{"emulator":{"name":"pubsub"},"message":"downloading pubsub-emulator-0.1.0.zip..."}}
[info] i  ui: downloading ui-v1.2.2.zip... {"metadata":{"emulator":{"name":"ui"},"message":"downloading ui-v1.2.2.zip..."}}
[info] 
=== Remoteconfig Setup
